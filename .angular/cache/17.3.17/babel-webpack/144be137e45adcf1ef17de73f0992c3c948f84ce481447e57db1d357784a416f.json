{"ast":null,"code":"import { __esDecorate, __runInitializers } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { StockService } from '../services/stock.service';\nimport { CommonModule } from '@angular/common';\nlet FuturePredictionComponent = (() => {\n  let _classDecorators = [Component({\n    selector: 'app-future-prediction',\n    standalone: true,\n    imports: [CommonModule],\n    providers: [StockService],\n    template: `\n    <h3>Future Prediction for {{ symbol }}</h3>\n    <pre>{{ prediction | json }}</pre>\n  `\n  })];\n  let _classDescriptor;\n  let _classExtraInitializers = [];\n  let _classThis;\n  var FuturePredictionComponent = class {\n    static {\n      _classThis = this;\n    }\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(null) : void 0;\n      __esDecorate(null, _classDescriptor = {\n        value: _classThis\n      }, _classDecorators, {\n        kind: \"class\",\n        name: _classThis.name,\n        metadata: _metadata\n      }, null, _classExtraInitializers);\n      FuturePredictionComponent = _classThis = _classDescriptor.value;\n      if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n      __runInitializers(_classThis, _classExtraInitializers);\n    }\n    constructor(route, stockService) {\n      this.route = route;\n      this.stockService = stockService;\n      this.symbol = '';\n    }\n    ngOnInit() {\n      this.symbol = this.route.snapshot.paramMap.get('id') || '';\n      this.stockService.getFuturePrediction(this.symbol).subscribe(data => this.prediction = data);\n    }\n  };\n  return FuturePredictionComponent = _classThis;\n})();\nexport { FuturePredictionComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}